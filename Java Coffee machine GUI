
package CP2013.CoffeeAndHeuristics;

/**
 *
 * @author Jesse
 */
public class CoffeeAndHeuristicsGUI extends javax.swing.JFrame{
    boolean Power = false;
    boolean BoilerWaterLevel = false;
    boolean JugFull = false;
    boolean JugOnHeater = false;
    boolean HeaterPlateOn = false;
    boolean SteamValveOpen = false;

    String Output = "";
    /**
     * Creates new form CoffeeAndHeuristicsGUI
     */
    public CoffeeAndHeuristicsGUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        SteamValveTestButton = new javax.swing.JButton();
        HeatingPlateTestButton = new javax.swing.JButton();
        JugFullTestButton = new javax.swing.JButton();
        BoilerFullTestButton = new javax.swing.JButton();
        PowerButton = new javax.swing.JButton();
        FillBoilerButton = new javax.swing.JButton();
        JugPlaceButton = new javax.swing.JButton();
        BrewButton = new javax.swing.JButton();
        CoffeeMachineGraphicFrame = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        OutputFeild = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Mark VI special coffee maker");

        SteamValveTestButton.setText("Steam Valve Open/Closed");

        HeatingPlateTestButton.setText("Heating Plate On/Off");

        JugFullTestButton.setText("Jug Full/Empty");

        BoilerFullTestButton.setText("Boiler Full/Empty");

        PowerButton.setText("Power On/Off");
        PowerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PowerButtonActionPerformed(evt);
            }
        });

        FillBoilerButton.setText("Fill Boiler");
        FillBoilerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FillBoilerButtonActionPerformed(evt);
            }
        });

        JugPlaceButton.setText("Jug Place/Remove");
        JugPlaceButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JugPlaceButtonActionPerformed(evt);
            }
        });

        BrewButton.setText("Start Brew");
        BrewButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BrewButtonActionPerformed(evt);
            }
        });

        CoffeeMachineGraphicFrame.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout CoffeeMachineGraphicFrameLayout = new javax.swing.GroupLayout(CoffeeMachineGraphicFrame);
        CoffeeMachineGraphicFrame.setLayout(CoffeeMachineGraphicFrameLayout);
        CoffeeMachineGraphicFrameLayout.setHorizontalGroup(
            CoffeeMachineGraphicFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 198, Short.MAX_VALUE)
        );
        CoffeeMachineGraphicFrameLayout.setVerticalGroup(
            CoffeeMachineGraphicFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        OutputFeild.setColumns(20);
        OutputFeild.setRows(5);
        OutputFeild.setToolTipText("Debug Output.");
        jScrollPane1.setViewportView(OutputFeild);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(CoffeeMachineGraphicFrame, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(FillBoilerButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(BrewButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(JugPlaceButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(JugFullTestButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(HeatingPlateTestButton, javax.swing.GroupLayout.DEFAULT_SIZE, 157, Short.MAX_VALUE)
                                    .addComponent(BoilerFullTestButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(PowerButton, javax.swing.GroupLayout.DEFAULT_SIZE, 158, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(SteamValveTestButton, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(SteamValveTestButton)
                            .addComponent(PowerButton))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(HeatingPlateTestButton)
                            .addComponent(FillBoilerButton))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(JugFullTestButton)
                            .addComponent(JugPlaceButton))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(BoilerFullTestButton)
                            .addComponent(BrewButton)))
                    .addComponent(CoffeeMachineGraphicFrame, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 123, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>                        

    private void PowerButtonActionPerformed(java.awt.event.ActionEvent evt) {                                            
        if (Power == true){
            Output = "Power Off";
            Power = false;
            }
        else{
            Output = "Power On";
            Power = true;
            }
        OutputFeild.append(">>"+Output+"\n");
    }                                           

    private void FillBoilerButtonActionPerformed(java.awt.event.ActionEvent evt) {                                                 
        if (BoilerWaterLevel == true){
            Output = "Boiler already full.";
            BoilerWaterLevel = true;
                }
        else{
            Output = "Boiler filled";
            BoilerWaterLevel = true;
        }
        OutputFeild.append(">>"+Output+"\n");
    }                                                

    private void JugPlaceButtonActionPerformed(java.awt.event.ActionEvent evt) {                                               
        if (JugOnHeater == true){
            Output = "Jug removed form heater.";
            JugOnHeater = false;
            }
        else{
            Output = "Jug placed on heater";
            JugOnHeater = true;
            }
        OutputFeild.append(">>"+Output+"\n");
    }                                              

    private void BrewButtonActionPerformed(java.awt.event.ActionEvent evt) {                                           
        if (Power == true){
            if(BoilerWaterLevel == true && JugOnHeater == true && JugFull == false){
               Output = "Brewing";
               BoilerWaterLevel = false;
               JugOnHeater = true;
               HeaterPlateOn = true;
               JugFull = true;
            }
            if(BoilerWaterLevel == false){
                Output.concat("Boiler empty please fill. ");
            }
            if(JugOnHeater == false){
                Output.concat("Jug not on heater plate. ");
            }
            if(JugFull == true){
                Output.concat("Jug full please empty. ");
            }
        }
        else{
            Output = "Turn on power";
        }
        OutputFeild.append(">>"+Output+"\n");
    }                                          

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CoffeeAndHeuristicsGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CoffeeAndHeuristicsGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CoffeeAndHeuristicsGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CoffeeAndHeuristicsGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CoffeeAndHeuristicsGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton BoilerFullTestButton;
    private javax.swing.JButton BrewButton;
    private javax.swing.JPanel CoffeeMachineGraphicFrame;
    private javax.swing.JButton FillBoilerButton;
    private javax.swing.JButton HeatingPlateTestButton;
    private javax.swing.JButton JugFullTestButton;
    private javax.swing.JButton JugPlaceButton;
    private javax.swing.JTextArea OutputFeild;
    private javax.swing.JButton PowerButton;
    private javax.swing.JButton SteamValveTestButton;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration                   
}
